// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique() @db.Text()
  email_validated Boolean   @default(false) @db.Boolean()
  phone           String?   @unique() @db.VarChar(20)
  phone_validated Boolean   @default(false) @db.Boolean()
  role            Role      @default(USER)
  name            String    @db.VarChar(100)
  password        String    @db.Text()
  avatar_url      String?   @db.Text()
  token           String?   @db.Text()
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now()) @updatedAt
  last_login      DateTime? @db.Timestamp()

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Category {
  id         String    @id @default(uuid())
  name       String    @unique() @db.VarChar(100)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  products   Product[]

  @@map("categories")
}

model ProductImage {
  id         String  @id @default(uuid())
  product_id String  @db.Text()
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  image_url  String  @db.Text()
  isPrimary  Boolean @default(false) @db.Boolean()

  @@map("product_images")
}

model Product {
  id          String         @id @default(uuid())
  name        String         @db.VarChar(100)
  description String?        @db.Text()
  price       Decimal        @db.Decimal(15, 2)
  stock       Int            @db.Integer()
  category_id String         @db.Text()
  category    Category       @relation(fields: [category_id], references: [id])
  images      ProductImage[]
  is_deleted  Boolean        @default(false) @db.Boolean()
  created_at  DateTime       @default(now())
  updated_at  DateTime       @default(now()) @updatedAt

  @@map("products")
}
